/*
 * TerminusDB API
 *
 * API for TerminusDB
 *
 * The version of the OpenAPI document: 10.0.3
 * Contact: team@terminusdb.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SquashPathGet200Response {
    #[serde(rename = "@type", skip_serializing_if = "Option::is_none")]
    pub at_type: Option<AtType>,
    #[serde(rename = "api:commit", skip_serializing_if = "Option::is_none")]
    pub api_colon_commit: Option<String>,
    #[serde(rename = "api:old_commit", skip_serializing_if = "Option::is_none")]
    pub api_colon_old_commit: Option<String>,
    #[serde(rename = "api:status", skip_serializing_if = "Option::is_none")]
    pub api_colon_status: Option<ApiColonStatus>,
}

impl SquashPathGet200Response {
    pub fn new() -> SquashPathGet200Response {
        SquashPathGet200Response {
            at_type: None,
            api_colon_commit: None,
            api_colon_old_commit: None,
            api_colon_status: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AtType {
    #[serde(rename = "api:SquashResponse")]
    ApiColonSquashResponse,
}

impl Default for AtType {
    fn default() -> AtType {
        Self::ApiColonSquashResponse
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ApiColonStatus {
    #[serde(rename = "api:success")]
    ApiColonSuccess,
}

impl Default for ApiColonStatus {
    fn default() -> ApiColonStatus {
        Self::ApiColonSuccess
    }
}

